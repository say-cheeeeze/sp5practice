Chapter 08 DB 연동

========================
pom.xml 추가한 디펜던시 소개
spring-jdbc : JDBC Template 등 JDBC 연동에 필요한 기능을 제공한다.
tomcat-jdbcx : DB 커넥션풀 기능을 제공한다.
mysql-connector-java : MySQL 연결에 필요한 JDBC 드라이버를 제공한다.



========================
DataSource 설정

JDBC API 는 DriverManager 외에 DataSource 를 이용해서 DB 연결을 구하는 방법을 제공하고 있다.
DataSource 를 사용하면 다음 방식으로 Connection 을 구할 수 있다.

Connection conn = null;

try { 
	conn = dataSource.getConnection();
	...
	
스프링이 제공하는 DB 연동 기능은 DataSource를 사용해서 DB Connection 을 구한다.
DB 연동에 사용할 DataSource 를 스프링 빈으로 등록하고 DB 연동 기능을 구현한 빈 객체는
DataSource를 주입받아 사용한다.

Tomcat JDBC 모듈은 javax.sql.DataASource 를 구현한 DataSource클래스를 제공한다.
이 클래스를 스프링 빈으로 등록해서 DataSource로 사용할 수 있다.


========================
Tomcat JDBC 의 주요 프로퍼티
org.apache.tomcat.jdbc.pool.DataSource 클래스는
커넥션풀 기능을 제공하는 DataSource 구현 클래스이다.

커넥션의 상태 
-> 커넥션 풀 : 커넥션을 생성하고 유지한다.
-> 커넥션 풀에 커넥션을 요청 : 해당 커넥션은 활성(active) 상태가 된다.
-> 커넥션 풀에 커넥션을 반환 : 해당 커넥션은 유휴(idle) 상태가 된다.
 
 
========================
maxActive는 활성상태가 가능한 최대 커넥션 개수를 지정한다. 
maxActive를 40으로 지정하면 이는 동시에 커넥션 풀에서 가져올 수 있는
커넥션 개수가 40개라는 뜻이다.
활성 상태 커넥션이 40개인데 커넥션 풀에 다시 커넥션을 요청하면 다른 커넥션이
요청될때까지 대기한다. 이 대기 시간이 maxWait 이다.
대기 시간 내에 풀에 반환된 커넥션이 있으면 해당 커넥션을 구하게 되고,
대기 시간 내에 풀에 반환된 커넥션이 없으면 익셉션이 발생한다.


 
========================
커넥션풀을 사용하는 이유는
바로 성능때문이다. 매번 새로운 커넥션을 생성하면 그 때마다 연결시간이 소모된다.
커넥션 풀을 사용하면 미리 커넥션을 생성했다가 필요할 때에 커넥션을 꺼내 쓰므로 커넥션을
구하는 시간이 줄어 전체 응답시간도 짧아진다. 
그래서 커넥션풀을 초기화할때 최소 수준의 커넥션을 미리 생성하는 것이 좋다.(initialSize)


